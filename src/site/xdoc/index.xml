<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>About Quality-Check</title>
		<author>André Rouél</author>
		<author>Dominik Seichter</author>
	</properties>
	<body>

		<section name="What is Quality-Check?">
			<p>
				The goal of quality-check is to provide a small Java library for basic runtime code quality checks. It provides
				similar features to org.springframework.util.Assert or com.google.common.base.Preconditions without the need to
				include big libraries or frameworks such as Spring or Guava. The package quality-check tries to replace these
				libraries and provide all the basic code quality checks you need.
			</p>
			<p>
				The checks provided here are typically used to validate method parameters and detect errors during runtime. To
				detect
				errors before runtime we use JSR-305 Annotations. With these annotations you are able to detect possible bugs
				earlier. For more informations look at FindBugs™ JSR-305 support.
			</p>
			<p>
				We noticed that many projects just copy org.springframework.util.Assert or com.google.common.base.Preconditions to
				get
				access to these quality checks. Therefore we provide these features and small library that can be included in any
				application without big overhead.
			</p>
		</section>
		<section name="Why is it called check and not assertion?">
			<p>We think that checks of method arguments are not only assertion tests it's more over a condition to work properly.
				More over it supports you to write faster contracts for your methods and classes. If nothing of this package make
				sense look at the concept design by contract.
			</p>
		</section>
		<section name="Example">
			<code><![CDATA[
/**
 * Sets the given object if it is not null.
 *
 * @throws IllegalArgumentException
 *         if the given argument is {@code null}
 */
setObject(final Object object) {
	if (object != null) {
		throw new IllegalArgumentException("Argument 'object' must not be null.");
	}
	this.object = object;
}			
			]]></code>
			<p>
				can be replaces by:
			</p>
			<code><![CDATA[
/**
 * Sets the given object if it is not null.
 *
 * @throws IllegalNullArgumentException
 *         if the given argument is {@code null}
 */
@ArgumentsChecked
setObject(final Object object) {
	this.object = Check.notNull(object);
}
			]]></code>
			<ul>
				<li>
					Report bugs, feature requests and other issues in the
					<a target="_blank" href="https://github.com/before/quality-check/issues">issue tracking</a>
					application.
				</li>
				<li>
					Help with the documentation by pointing out areas that are lacking or unclear, and if you are so inclined,
					submitting patches to correct it. You can quickly contribute rough thoughts by forking this project on
					<a target="_blank" href="https://github.com/before/quality-check">GitHub</a>
					, or you can volunteer to help collate and organize information that is already there.
				</li>
			</ul>
			<p>Your participation in this project is much appreciated!</p>
		</section>

	</body>
</document>
